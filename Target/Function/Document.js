var l=async(...[s])=>{for(const t of s)for(const i of await(await import("fast-glob")).default(t.replaceAll("'","").replaceAll('"',"")))n.push(i);n.reverse(),console.log(n),console.log(["typedoc","--commentStyle all",`--customCss ${e(`${o}/../Stylesheet/Theme.css`)}`,"--includeVersion","--out ./Documentation",`--plugin ${e(`${o}/../../Target/Variable/Load.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-remove-references/dist/index.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-rename-defaults/index.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-mdn-links/dist/index.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-zod/dist/plugin.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-merge-modules/dist/index.js`)}`,`--plugin ${e(`${o}/../../node_modules/typedoc-plugin-keywords/index.js`)}`,"--searchInComments",`--keywords ${(await(await import("../Function/JSON.js")).default("package.json",process.cwd()))?.keywords?.join(" --keywords ")??" typescript-document "}`,"--theme TypeScriptDocument","--entryPointStrategy expand","--mergeModulesRenameDefaults","--mergeModulesMergeMode module",`--entryPoints ${n.map(t=>[t.replace("Source/","").split(".").slice(0,-1).join("."),t]).join(" --entryPoints ")}`].join(" "))};const{default:r}=await import("../Function/Exec.js"),{resolve:e}=await import("path"),n=[],o=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{o as Current,r as Exec,n as Pipe,l as default,e as resolve};
