var d=async(...[i])=>{for(const n of i)for(const s of await(await import("fast-glob")).default(n.replaceAll("'","").replaceAll('"',"")))o.push(s);o.reverse(),r(["typedoc","--commentStyle all",`--customCss ${e(`${t}/../Stylesheet/Theme.css`)}`,"--includeVersion","--out ./Documentation",`--plugin ${e(`${t}/../../Target/Variable/Load.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-remove-references/dist/index.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-rename-defaults/index.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-mdn-links/dist/index.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-zod/dist/plugin.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-merge-modules/dist/index.js`)}`,`--plugin ${e(`${t}/../../node_modules/typedoc-plugin-keywords/index.js`)}`,"--searchInComments",`--keywords ${(await(await import("../Function/JSON.js")).default("package.json",process.cwd()))?.keywords?.join(" --keywords ")??" typescript-document "}`,"--theme TypeScriptDocument","--entryPointStrategy expand","--mergeModulesRenameDefaults","--mergeModulesMergeMode module",`--entryPoints ${o.join(" --entryPoints ")}`].join(" "))};const{default:r}=await import("../Function/Exec.js"),{resolve:e}=await import("path"),o=[],t=(await import("url")).fileURLToPath((await import("path")).dirname(import.meta.url));export{t as Current,r as Exec,o as Pipe,d as default,e as resolve};
